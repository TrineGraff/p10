}
plot(c(1), xlim = c(1,128), ylim = c(1, 708), col = "white", ylab = 'Tidsobservationer', xlab = "Forklarende variable")
for(i in 1:n){
for(j in 1:p){
if(data_matrix[i,j] == 1)
points(j,i, col = "black", pch = 20, cex = 0.1)
}
}
abline(h = 12, col = "red", lty = "dashed")
abline(h = 704, col = "red", lty = "dashed")
LocateNAs = function(data){
for(i in 1:ncol(data)){
number = length(which(is.na(data[ ,i])))
cat("Kolonne =", i, "\t Antal NAs =", number, "\n")
}
}
LocateNAs(transformed_data)
transf_data
transf_data
data <- transformed_data[-c(1:12, 704:708), -c(58, 60, 95, 123, 128)]
LocateNAs(data)
library(foreach)
library(tidyverse)
library(ggplot2)
library(gridExtra)
FRED_MD <- read.csv("../data/FRED_MD/current.csv", sep = ",", header = TRUE)
FRED_MD
tail(FRED_MD)
date <- as.Date(FRED_MD[-1, 1], format = "%m/%d/%Y")
rawdata <- FRED_MD[-1, -1]
tcodes <- as.numeric(FRED_MD[1, -1])
transxf <- function(x, tcode) {
if(tcode == 1) x
else if(tcode == 2) diff(x)
else if(tcode == 3) diff(x, 2)
else if(tcode == 4) log(x)
else if(tcode == 5) diff(log(x))
else if(tcode == 6) diff(log(x), 2)
else if(tcode == 7) diff(x[-1] / x[-length(x)] - 1)
}
nas <- c(0, 1, 2, 0, 1, 2, 2)
transf_data <- foreach(i = 1:ncol(rawdata), .combine = cbind) %do% {
if(nas[tcodes[i]] != 0) {
c(rep(NA, nas[tcodes[i]]), transxf(rawdata[, i], tcodes[i]))
}
else transxf(rawdata[, i], tcodes[i])
}
colnames(transf_data) <- names(rawdata)
transformed_data <- data.frame(transf_data)
transformed_data
tail(transformed_data)
n = nrow(transformed_data)
p = ncol(transformed_data)
data_matrix = matrix(nrow = n, ncol = p)
for(j in 1:p){
for(i in 1:n){
if(is.na(transformed_data[i,j]))
data_matrix[i,j] = 1
else
data_matrix[i,j] = 0
}
}
plot(c(1), xlim = c(1,128), ylim = c(1, 708), col = "white", ylab = 'Tidsobservationer', xlab = "Forklarende variable")
for(i in 1:n){
for(j in 1:p){
if(data_matrix[i,j] == 1)
points(j,i, col = "black", pch = 20, cex = 0.1)
}
}
transformed_data$S.P.PE.ratio
tail(transformed_data)
transformed_data$S.P.PE.ratio
LocateNAs = function(data){
for(i in 1:ncol(data)){
number = length(which(is.na(data[ ,i])))
cat("Kolonne =", i, "\t Antal NAs =", number, "\n")
}
}
LocateNAs(transformed_data)
transformed_data$RETAILx
transformed_data[,53]
LocateNAs(transformed_data)
transformed_data[,53]
transformed_data[,54]
transformed_data[,55]
transformed_data[,56]
transformed_data[,57]
data <- transformed_data[-c(1:12, 704:708), -c(58, 60, 95, 123, 128)]
LocateNAs(data)
dato <- date[-c(1:12, 704:708)]
head(dato)
tail(dato)
df <- data.frame(dato, data)
df
library(foreach)
library(tidyverse)
FRED_MD <- read.csv("../data/FRED_MD/current.csv", sep = ",", header = TRUE)
date <- as.Date(FRED_MD[-1, 1], format = "%m/%d/%Y")
rawdata <- FRED_MD[-1, -1]
tcodes <- as.numeric(FRED_MD[1, -1])
transxf <- function(x, tcode) {
if(tcode == 1) x
else if(tcode == 2) diff(x)
else if(tcode == 3) diff(x, 2)
else if(tcode == 4) log(x)
else if(tcode == 5) diff(log(x))
else if(tcode == 6) diff(log(x), 2)
else if(tcode == 7) diff(x[-1] / x[-length(x)] - 1)
}
nas <- c(0, 1, 2, 0, 1, 2, 2)
transf_data <- foreach(i = 1:ncol(rawdata), .combine = cbind) %do% {
if(nas[tcodes[i]] != 0) {
c(rep(NA, nas[tcodes[i]]), transxf(rawdata[, i], tcodes[i]))
}
else transxf(rawdata[, i], tcodes[i])
}
colnames(transf_data) <- names(rawdata)
transformed_data <- data.frame(transf_data)
n = nrow(transformed_data)
p = ncol(transformed_data)
data_matrix = matrix(nrow = n, ncol = p)
for(j in 1:p){
for(i in 1:n){
if(is.na(transformed_data[i,j]))
data_matrix[i,j] = 1
else
data_matrix[i,j] = 0
}
}
plot(c(1), xlim = c(1,128), ylim = c(1, 708), col = "white", ylab = 'Tidsobservationer', xlab = "Forklarende variable")
for(i in 1:n){
for(j in 1:p){
if(data_matrix[i,j] == 1)
points(j,i, col = "black", pch = 20, cex = 0.1)
}
}
abline(h = 12, col = "red", lty = "dashed")
abline(h = 704, col = "red", lty = "dashed")
LocateNAs = function(data){
for(i in 1:ncol(data)){
number = length(which(is.na(data[ ,i])))
cat("Kolonne =", i, "\t Antal NAs =", number, "\n")
}
}
LocateNAs(transformed_data)
transformed_data[, 58] == transformed_data[, 'ACOGNO']
transformed_data[, 60] == transformed_data[, 'ANDENOx']
transformed_data[, 95] == transformed_data[, 'TWEXMMTH']
transformed_data[, 123] == transformed_data[, 'UMCSENTx']
transformed_data[, 128] == transformed_data[, 'VXOCLSx']
data <- transformed_data[-c(1:12, 704:708), -c(58, 60, 95, 123, 128)]
LocateNAs(data)
dato <- date[-c(1:12, 704:708)]
df <- data.frame(dato, data)
write.csv(df, file = "transformed_data.csv")
library(foreach)
library(tidyverse)
FRED_MD <- read.csv("../data/FRED_MD/current.csv", sep = ",", header = TRUE)
date <- as.Date(FRED_MD[-1, 1], format = "%m/%d/%Y")
rawdata <- FRED_MD[-1, -1]
tcodes <- as.numeric(FRED_MD[1, -1])
transxf <- function(x, tcode) {
if(tcode == 1) x
else if(tcode == 2) diff(x)
else if(tcode == 3) diff(x, 2)
else if(tcode == 4) log(x)
else if(tcode == 5) diff(log(x))
else if(tcode == 6) diff(log(x), 2)
else if(tcode == 7) diff(x[-1] / x[-length(x)] - 1)
}
nas <- c(0, 1, 2, 0, 1, 2, 2)
transf_data <- foreach(i = 1:ncol(rawdata), .combine = cbind) %do% {
if(nas[tcodes[i]] != 0) {
c(rep(NA, nas[tcodes[i]]), transxf(rawdata[, i], tcodes[i]))
}
else transxf(rawdata[, i], tcodes[i])
}
colnames(transf_data) <- names(rawdata)
transformed_data <- data.frame(transf_data)
n = nrow(transformed_data)
p = ncol(transformed_data)
data_matrix = matrix(nrow = n, ncol = p)
for(j in 1:p){
for(i in 1:n){
if(is.na(transformed_data[i,j]))
data_matrix[i,j] = 1
else
data_matrix[i,j] = 0
}
}
plot(c(1), xlim = c(1,128), ylim = c(1, 708), col = "white", ylab = 'Tidsobservationer', xlab = "Forklarende variable")
for(i in 1:n){
for(j in 1:p){
if(data_matrix[i,j] == 1)
points(j,i, col = "black", pch = 20, cex = 0.1)
}
}
abline(h = 12, col = "red", lty = "dashed")
abline(h = 704, col = "red", lty = "dashed")
LocateNAs = function(data){
for(i in 1:ncol(data)){
number = length(which(is.na(data[ ,i])))
cat("Kolonne =", i, "\t Antal NAs =", number, "\n")
}
}
LocateNAs(transformed_data)
transformed_data[, 58] == transformed_data[, 'ACOGNO']
transformed_data[, 60] == transformed_data[, 'ANDENOx']
transformed_data[, 95] == transformed_data[, 'TWEXMMTH']
transformed_data[, 123] == transformed_data[, 'UMCSENTx']
transformed_data[, 128] == transformed_data[, 'VXOCLSx']
data <- transformed_data[-c(1:12, 704:708), -c(58, 60, 95, 123, 128)]
LocateNAs(data)
dato <- date[-c(1:12, 704:708)]
df <- data.frame(dato, data)
write.csv(df, file = "transformed_data.csv")
library(ggplot2)
library(gridExtra)
df <- read.csv("../data/transformed_data.csv")
df
ggplot(df, aes(data, UNRATE)) +
geom_line()
ggplot(df, aes(data, UNRATE)) +
geom_line()
df
ggplot(df, aes(data, UNRATE)) +
geom_point()
rpi_s <- ggplot(df, aes(dato, RPI)) + geom_line() +
labs(x = " ", y = "?") + ggtitle("RPI")
unrate_s <- ggplot(df, aes(dato, UNRATE)) + geom_line() +
labs(x = " ", y = "?") + ggtitle("UNRATE")
m1sl_s <- ggplot(df, aes(dato, M1SL)) + geom_line() +
labs(x = " ", y = "?") + ggtitle("M1SL")
m2sl_s <- ggplot(df, aes(dato, M2SL)) + geom_line() +
labs(x = " ", y = "?") + ggtitle("M2SL")
fedfunds_s <- ggplot(df, aes(dato, FEDFUNDS)) + geom_line() +
labs(x = " ", y = "?") + ggtitle("FEDFUNDS")
tb3ms_s <- ggplot(df, aes(dato, TB3MS)) + geom_line() +
labs(x = " ", y = "?") + ggtitle("TB3MS")
gs5_s <- ggplot(df, aes(dato, GS5)) + geom_line() +
labs(x = " ", y = "?") + ggtitle("GS5")
exjpusx_s <- ggplot(df, aes(dato, EXJPUSx)) + geom_line() +
labs(x = " ", y = "?") + ggtitle("EXJPUSx")
cpiaucsl_s <- ggplot(df, aes(dato, CPIAUCSL)) + geom_line() +
labs(x = " ", y = "?") + ggtitle("CPIAUCSL")
sp500_s <- ggplot(df, aes(dato, S.P.500)) + geom_line() +
labs(x = " ", y = "?") + ggtitle("S.P.500")
grid.arrange(rpi_s, unrate_s, m1sl_s, m2sl_s, fedfunds_s,
tb3ms_s, gs5_s, exjpusx_s, cpiaucsl_s, sp500_s, ncol=2)
grid.arrange(rpi_s, unrate_s, m1sl_s, m2sl_s, fedfunds_s,
tb3ms_s, gs5_s, exjpusx_s, cpiaucsl_s, sp500_s, ncol=2)
ggplot(df, aes(data, UNRATE)) +
geom_point()
df <- read.csv("../data/transformed_data.csv")
plot(df$RETAILx)
plot(df$UNRATE, t = "l")
ggplot(df, aes(data, UNRATE)) + geom_lin()
ggplot(df, aes(data, UNRATE)) + geom_line()
plot(df$UNRATE, t = "l")
df1 <- as.data.frame(df)
df <- read.csv("../data/transformed_data.csv")
df
ggplot(df) + geom_line(aes(data, UNRATE))
length(df$dato)
length(df$UNRATE)
df
qplot(df$dato, df$UNRATE)
qplot(df$dato, df$UNRATE) +
geom_line()
qplot(df$dato, df$UNRATE)
gg1 <- ggplot(df, aes(df$dato, df$UNRATE)) + geom_line() +
labs(x = " ", y = "EUR/MWh") + ggtitle("DK1")
gg1
qplot(df$dato, df$UNRATE)
?ggplot
ggplot(df, aes(df$dato, df$UNRATE)) + geom_line() +
+ scale_x_date(date_labels = "%b-%Y")
ggplot(df, aes(df$dato, df$UNRATE)) + geom_line() +
+ scale_x_date(date_labels = "%b-%Y")
ggplot(df, aes(df$dato, df$UNRATE)) + geom_line() +
scale_x_date(date_labels = "%b-%Y") +
labs(x = " ", y = "??") +
+ ggtitle("UNRATE")
ggplot(df, aes(dato, UNRATE)) + geom_line() +
scale_x_date(date_labels = "%b-%Y") +
labs(x = " ", y = "??") +
+ ggtitle("UNRATE")
ggplot(df, aes(dato, UNRATE)) + geom_line() +
scale_x_date(date_labels = "%b-%Y") +
labs(x = " ", y = "??") +
ggtitle("UNRATE")
ggplot(df, aes(dato, UNRATE)) + geom_line() +
scale_x_date(format = "%b-%Y") +
labs(x = " ", y = "??") +
ggtitle("UNRATE")
ggplot(df, aes(dato, UNRATE)) + geom_line() +
scale_x_date(format = "%b-%Y") +
labs(x = " ") +
y = ("??") +
ggtitle("UNRATE")
ggplot(df, aes(dato, UNRATE)) + geom_line() +
scale_x_date(format = "%b-%Y") +
labs(x = " ") +
ylabs("??")
df <- read.csv("../data/transformed_data.csv")
df
ggplot(aes(x='dato', y='UNRATE'), data=df) +
geom_point() +
scale_x_date(labels = date_format("%Y-%m-%d"))
?data_format
ggplot(aes(x='dato', y='UNRATE'), data=df) +
geom_point() +
scale_x_date(labels = date_format("%Y-%m-%d"))
?
ggplot(df, aes(dato, UNRATE)) + geom_line() +
scale_x_date(format = "%b-%Y") + xlab("") + ylab("Daily Views")
plot(df$UNRATE, t = "l")
df <- read.csv("../data/transformed_data.csv")
group1 <- data.frame(df$RPI, df$W875RX1, df$INDPRO, df$IPFPNSS, df$IPFINAL, df$IPCONGD,
df$IPDCONGD, df$IPNCONGD, df$IPBUSEQ, df$IPMAT, df$IPDMAT, df$IPNMAT,
df$IPMANSICS, df$IPB51222S, df$IPFUELS, df$CUMFNS)
group2 <- data.frame(df$HWI, df$HWIURATIO, df$CLF16OV, df$CE16OV, df$UNRATE, df$UEMPMEAN,
df$UEMPLT5, df$UEMP5TO14, df$UEMP15OV, df$UEMP15T26, df$UEMP27OV, df$CLAIMSx,
df$PAYEMS, df$USGOOD, df$CES1021000001, df$USCONS, df$MANEMP, df$DMANEMP,
df$NDMANEMP, df$SRVPRD, df$USTPU, df$USWTRADE, df$USTRADE, df$USFIRE,
df$USGOVT, df$CES0600000007, df$AWOTMAN, df$AWHMAN, df$CES0600000008, df$CES2000000008,
df$CES3000000008)
group3 <- data.frame(df$HOUST, df$HOUSTNE, df$HOUSTMW, df$HOUSTS, df$HOUSTW, df$PERMIT,
df$PERMITNE, df$PERMITMW, df$PERMITS, df$PERMITW)
group4 <- data.frame(df$DPCERA3M086SBEA, df$CMRMTSPLx, df$RETAILx, df$AMDMNOx,
df$AMDMUOx, df$BUSINVx, df$ISRATIOx)
group5 <- data.frame(df$M1SL, df$M2SL, df$M2REAL, df$AMBSL, df$TOTRESNS, df$NONBORRES,
df$BUSLOANS, df$REALLN, df$NONREVSL, df$CONSPI, df$MZMSL, df$DTCOLNVHFNM,
data$DTCTHFNM, data$INVEST)
group5 <- data.frame(df$M1SL, df$M2SL, df$M2REAL, df$AMBSL, df$TOTRESNS, df$NONBORRES,
df$BUSLOANS, df$REALLN, df$NONREVSL, df$CONSPI, df$MZMSL, df$DTCOLNVHFNM,
df$DTCTHFNM, df$INVEST)
group6 <- data.frame(df$FEDFUNDS, df$CP3Mx, df$TB3MS, df$TB6MS, df$GS1, df$GS5,
df$GS10, df$AAA, df$BAA, df$COMPAPFFx, df$TB3SMFFM, df$TB6SMFFM,
df$T1YFFM, df$T5YFFM, df$T10YFFM, df$AAAFFM, df$BAAFFM, df$EXSZUSx,
df$EXJPUSx, df$EXUSUKx, df$EXCAUSx)
group7 <- data.frame(df$WPSFD49207, df$WPSFD49502, df$WPSID61, df$WPSID62, df$OILPRICEx, df$PPICMM,
df$CPIAUCSL, df$CPIAPPSL, df$CPITRNSL, df$CPIMEDSL, df$CUSR0000SAC, df$CUSR0000SAD,
df$CUSR0000SAS, df$CPIULFSL, df$CUSR0000SA0L2, df$CUSR0000SA0L5, df$PCEPI, df$DDURRG3M086SBEA,
df$DNDGRG3M086SBEA, df$DSERRG3M086SBEA)
group8 <- data.frame(df$S.P.500, df$S.P..indust, df$S.P.div.yield, df$S.P.PE.ratio)
cor(group1)
plot(cor(group1))
cor(group1)
corr(group2)
cor(group2)
cor(group8)
plot(group8)
source("../data/setup_data.R")
library(Metrics)
library(ggplot2)
library(gridExtra)
library(grid)
y = scale(data[, "UNRATE"], scale = FALSE)
# Forecast - AR -----------------------------------------------------------
forecast = function(data, p, idx = idx) {
fc = c(NA)
for(k in 0:length(data[-c(1:idx)])) {
y = data[(p + 1):(length(data[1:idx]) + k)] #y bliver opdateret med den sande værdi for hvert k
n.obs = length(y)
x_lag = matrix(nrow = n.obs, ncol = p)
for (j in 1:p){
for (i in 1:n.obs){
x_lag[i,j] = data[p+i-j]
}
}
beta_hat = solve(crossprod(x_lag), crossprod(x_lag, y))
fc[k+1] = data[(length(data[1:idx]) + k):(length(data[1:idx]) + k - p +1)] %*% beta_hat
}
print(list("fc" = fc))
}
fit = forecast(y, 1, idx)
# Analyse -----------------------------------------------------------------
loss = function(fc, y_test){
print(list("MAE" = mae(y_test, fc)))
print(list("RMSE" = rmse(y_test, fc)))
}
loss(fit$fc, y = c(y[idx], y[-c(1:idx)]))
as.character(test_dato)
dato = c(as.character(data_raw$dato[idx][1]), as.character(test_dato))
df = data.frame(date = as.Date(dato), fc = fit$fc, y = c(y[idx], y[-c(1:idx)]))
ggplot(df, aes(x = date ))  +
geom_line(aes(y = y, colour = "Arbejdsløshed")) +
geom_line(aes(y = fc, colour = "AR(1)")) +
ylab("Rate") + xlab("Dato") +
scale_colour_manual(values = c("red", "gray")) +
theme(legend.title=element_blank()) +
ggtitle("One-step-ahead forecast")
df
ggplot(df, aes(x = dato))  +
geom_line(aes(y = UNRATE)) +
ylab("Rate") + xlab("Dato") +
scale_colour_manual(values = c("red", "gray")) +
theme(legend.title=element_blank()) +
ggtitle("One-step-ahead forecast")
df <- read.csv("../data/transformed_data.csv")
plot(df$UNRATE, t = "l")
qplot(df$dato, df$UNRATE)
ggplot(df, aes(dato, UNRATE)) + geom_line() +
scale_x_date(format = "%b-%Y") +
labs(x = " ") +
ylabs("??")
ggplot(aes(x='dato', y='UNRATE'), data=df) +
geom_point() +
scale_x_date(labels = date_format("%Y-%m-%d"))
ggplot(df, aes(dato, UNRATE)) + geom_line() +
scale_x_date(format = "%b-%Y") + xlab("") + ylab("Daily Views")
ggplot(df, aes(x = dato))  +
geom_line(aes(y = UNRATE)) +
ylab("Rate") + xlab("Dato") +
scale_colour_manual(values = c("red", "gray")) +
theme(legend.title=element_blank()) +
ggtitle("One-step-ahead forecast")
ggplot(df, aes(x = dato))  +
geom_line(aes(y = UNRATE)) +
ylab("Rate") + xlab("Dato") +
theme(legend.title=element_blank()) +
ggtitle("One-step-ahead forecast")
df = data.frame(date = as.Date(dato), fc = fit$fc, y = c(y[idx], y[-c(1:idx)]))
df
dato = c(as.character(data_raw$dato[idx][1]), as.character(test_dato))
dato
as.Date(dato)
df <- read.csv("../data/transformed_data.csv")
df <- read.csv("../data/transformed_data.csv")
plot(df$UNRATE, t = "l")
plot(df$dato)
ggplot(df, aes(dato, UNRATE)) + geom_line() +
xlab("") +
ylab("Daily Views")
df$UNRATE
df$dato
date <- as.Date(dato)
date <- as.Date(df$dato)
date
ggplot(df, aes(date, UNRATE)) + geom_line() +
xlab("") +
ylab("Daily Views")
library(foreach)
library(tidyverse)
FRED_MD <- read.csv("../data/FRED_MD/current.csv", sep = ",", header = TRUE)
date <- as.Date(FRED_MD[-1, 1], format = "%m/%d/%Y")
rawdata <- FRED_MD[-1, -1]
tcodes <- as.numeric(FRED_MD[1, -1])
transxf <- function(x, tcode) {
if(tcode == 1) x
else if(tcode == 2) diff(x)
else if(tcode == 3) diff(x, 2)
else if(tcode == 4) log(x)
else if(tcode == 5) diff(log(x))
else if(tcode == 6) diff(log(x), 2)
else if(tcode == 7) diff(x[-1] / x[-length(x)] - 1)
}
nas <- c(0, 1, 2, 0, 1, 2, 2)
transf_data <- foreach(i = 1:ncol(rawdata), .combine = cbind) %do% {
if(nas[tcodes[i]] != 0) {
c(rep(NA, nas[tcodes[i]]), transxf(rawdata[, i], tcodes[i]))
}
else transxf(rawdata[, i], tcodes[i])
}
colnames(transf_data) <- names(rawdata)
transformed_data <- data.frame(transf_data)
n = nrow(transformed_data)
p = ncol(transformed_data)
data_matrix = matrix(nrow = n, ncol = p)
for(j in 1:p){
for(i in 1:n){
if(is.na(transformed_data[i,j]))
data_matrix[i,j] = 1
else
data_matrix[i,j] = 0
}
}
plot(c(1), xlim = c(1,128), ylim = c(1, 708), col = "white", ylab = 'Tidsobservationer', xlab = "Forklarende variable")
for(i in 1:n){
for(j in 1:p){
if(data_matrix[i,j] == 1)
points(j,i, col = "black", pch = 20, cex = 0.1)
}
}
abline(h = 12, col = "red", lty = "dashed")
abline(h = 704, col = "red", lty = "dashed")
LocateNAs = function(data){
for(i in 1:ncol(data)){
number = length(which(is.na(data[ ,i])))
cat("Kolonne =", i, "\t Antal NAs =", number, "\n")
}
}
LocateNAs(transformed_data)
transformed_data[, 58] == transformed_data[, 'ACOGNO']
transformed_data[, 60] == transformed_data[, 'ANDENOx']
transformed_data[, 95] == transformed_data[, 'TWEXMMTH']
transformed_data[, 123] == transformed_data[, 'UMCSENTx']
transformed_data[, 128] == transformed_data[, 'VXOCLSx']
data <- transformed_data[-c(1:12, 704:708), -c(58, 60, 95, 123, 128)]
LocateNAs(data)
dato <- as.Date(date[-c(1:12, 704:708)])
dato
df <- data.frame(dato, data)
df
write.csv(df, file = "transformed_data.csv")
write.csv(df, file = "transformed_data.csv")
file.choose()
file.choose()
write.csv(df, file = "/Users/louisenygaardchristensen/Desktop/p10/R/data/transformed_data.csv")
write.csv(df, file = "/Users/louisenygaardchristensen/Desktop/p10/R/data/transformed_data.csv")
write.csv(df, file = "/Users/louisenygaardchristensen/Desktop/p10/R/data/transformed_data.csv")

FRED <- df_raw[-c(1:12, 704:708), -c(58, 60, 95, 123, 128)]
dato11 = FRED$dato
dato1 <- c(as.character(dato11))
FRED
FRED$UNRATE
df_nu = data.frame(y = FRED$UNRATE, date = as.Date(data_raw$dato))
ggplot(df_nu, aes(x = date ))  +
geom_line(aes(y = df_nu$y), col = "dimgray") +
ylab("") + xlab("Procent") +
theme(legend.title=element_blank())
ggplot(df, aes(x = date ))  +
geom_line(aes(y = df$y), col = "dimgray") +
ylab("Rate") + xlab("") +
theme(legend.title=element_blank())
ggplot(df, aes(x = date ))  +
geom_line(aes(y = df$y), col = "dimgray") +
ylab("Rate") + xlab("") +
theme(legend.title=element_blank())
stad = ggplot(df, aes(x = date ))  +
geom_line(aes(y = df$y), col = "dimgray") +
ylab("Rate") + xlab("") +
theme(legend.title=element_blank())
df_nu = data.frame(y = FRED$UNRATE, date = as.Date(data_raw$dato))
uden = ggplot(df_nu, aes(x = date ))  +
geom_line(aes(y = df_nu$y), col = "dimgray") +
ylab("Procent") + xlab("") +
theme(legend.title=element_blank())
grid.arrange(uden, stad)
as.Date(data_raw$dato)
df_nu
tail(df_nu)
source("data_unrate.R")
source("package.R")
source("parm.R")
source("shrinkage_metoder/res_plot.R")
source("shrinkage_metoder/lars/getmin.R")
source("shrinkage_metoder/adj.r.2.R")
set.seed(1)
lars_cv = cv.lars(x_train, y_train, type = "lar", intercept = FALSE,
normalize = FALSE, trace = TRUE)
lars_fit = lars(x_train, y_train, type = "lar", intercept = FALSE,
normalize = FALSE)
getmin_lars = getmin_l(lars_cv$index, lars_cv$cv, lars_cv$cv.error)
# Krydsvalidering ---------------------------------------------------------
df_lars = data.frame(f = f, cv = lars_cv$cv, cv_error = lars_cv$cv.error)
#omregner til fraction
s1 = apply(abs(lars_fit$beta), 1, sum) #summere over rækken. dvs vi får summen af koefficienterne
f = s1/max(s1)
# Krydsvalidering ---------------------------------------------------------
df_lars = data.frame(f = f, cv = lars_cv$cv, cv_error = lars_cv$cv.error)
lars = ggplot(df_lars, aes(df_lars$f, df_lars$cv)) +
geom_errorbar(aes(ymin = df_lars$cv + df_lars$cv_error,
ymax = df_lars$cv - df_lars$cv_error, width = .1))+
geom_point(col = "red") +
labs(x = expression(f==abs(beta)/max(abs(beta))), y = "MSE", color = "") +
geom_vline(aes(xintercept= df_lars$f[28], col = "blue"), linetype="dotted") +
geom_vline(aes(xintercept= df_lars$f[20], col = "brown"), linetype="dotted") +
ggtitle("LARS") + scale_color_manual(labels = c(expression(f[min]), expression(f[1][sd])), values = c("blue", "brown"))
source("data_unrate.R")
source("package.R")
source("parm.R")
source("shrinkage_metoder/res_plot.R")
source("shrinkage_metoder/lars/getmin.R")
source("shrinkage_metoder/adj.r.2.R")
set.seed(1)
lasso_cv = cv.lars(x_train, y_train, type = "lasso", intercept = FALSE,
normalize = FALSE, trace = FALSE)
lasso_fit = lars(x_train, y_train, type = "lasso", normalize = FALSE, intercept = FALSE)
getmin = getmin_l(lasso_cv$index, lasso_cv$cv, lasso_cv$cv.error)
# Krydsvalidering ---------------------------------------------------------
df_la = data.frame(lasso_cv$index, lasso_cv$cv, lasso_cv$cv.error)
lasso = ggplot(df_la, aes(df_la$lasso_cv.index,df_la$lasso_cv.cv)) +
geom_errorbar(aes(ymin = df_la$lasso_cv.cv + df_la$lasso_cv.cv.error,
ymax = df_la$lasso_cv.cv - df_la$lasso_cv.cv.error, width = .1)) +
geom_point(col = "red") +
labs(x = expression(f==abs(beta)/max(abs(beta))), y = "MSE", color = "") +
geom_vline(aes(xintercept= getmin$lambda.min, col = "blue"), linetype="dotted") +
geom_vline(aes(xintercept= getmin$lambda.1se, col = "brown"), linetype="dotted") +
ggtitle("LARS med lasso modifikation (CV)") + scale_color_manual(labels = c(expression(f[min]), expression(f[1][sd])), values = c("blue", "brown"))
grid.arrange(lars, lasso, ncol = 2)
lasso = ggplot(df_la, aes(df_la$lasso_cv.index,df_la$lasso_cv.cv)) +
geom_errorbar(aes(ymin = df_la$lasso_cv.cv + df_la$lasso_cv.cv.error,
ymax = df_la$lasso_cv.cv - df_la$lasso_cv.cv.error, width = .1)) +
geom_point(col = "red") +
labs(x = expression(f==abs(beta)/max(abs(beta))), y = "MSE", color = "") +
geom_vline(aes(xintercept= getmin$lambda.min, col = "blue"), linetype="dotted") +
geom_vline(aes(xintercept= getmin$lambda.1se, col = "brown"), linetype="dotted") +
ggtitle("LARS med lasso modifikation") + scale_color_manual(labels = c(expression(f[min]), expression(f[1][sd])), values = c("blue", "brown"))
grid.arrange(lars, lasso, ncol = 2)
# Krydsvalidering ---------------------------------------------------------
df_la = data.frame(lasso_cv$index, lasso_cv$cv, lasso_cv$cv.error)
lasso = ggplot(df_la, aes(df_la$lasso_cv.index,df_la$lasso_cv.cv)) +
geom_errorbar(aes(ymin = df_la$lasso_cv.cv + df_la$lasso_cv.cv.error,
ymax = df_la$lasso_cv.cv - df_la$lasso_cv.cv.error, width = .1)) +
geom_point(col = "red") +
labs(x = expression(f==abs(beta)/max(abs(beta))), y = "MSE", color = "") +
geom_vline(aes(xintercept= getmin$lambda.min, col = "blue"), linetype="dotted") +
geom_vline(aes(xintercept= getmin$lambda.1se, col = "brown"), linetype="dotted") +
ggtitle("Lasso LARS (CV)") + scale_color_manual(labels = c(expression(f[min]), expression(f[1][sd])), values = c("blue", "brown"))
grid.arrange(lars, lasso, ncol = 2)
lasso = ggplot(df_la, aes(df_la$lasso_cv.index,df_la$lasso_cv.cv)) +
geom_errorbar(aes(ymin = df_la$lasso_cv.cv + df_la$lasso_cv.cv.error,
ymax = df_la$lasso_cv.cv - df_la$lasso_cv.cv.error, width = .1)) +
geom_point(col = "red") +
labs(x = expression(f==abs(beta)/max(abs(beta))), y = "MSE", color = "") +
geom_vline(aes(xintercept= getmin$lambda.min, col = "blue"), linetype="dotted") +
geom_vline(aes(xintercept= getmin$lambda.1se, col = "brown"), linetype="dotted") +
ggtitle("Lasso LARS") + scale_color_manual(labels = c(expression(f[min]), expression(f[1][sd])), values = c("blue", "brown"))
grid.arrange(lars, lasso, ncol = 2)
##LARS
source("data_unrate.R")
source("package.R")
source("shrinkage_metoder/lars/getmin.R")
library(data.table)
set.seed(1)
lars_cv = cv.lars(x_train, y_train, type = "lar", intercept = FALSE,
normalize = FALSE, trace = FALSE)
lars_fit = lars(x_train, y_train, type = "lar", intercept = FALSE,
normalize = FALSE)
getmin_lars = getmin_l(lars_cv$index, lars_cv$cv, lars_cv$cv.error)
coef_lars = coef(lars_fit, s = getmin_lars$lambda.1se, mode = "step")
idx_lars = which(coef_lars != 0)
length(idx_lars)
coef = data.table("LARS (CV)" = coef_lars)
coef[, feature := colnames(x_train)]
koef <- coef[feature == "DPCERA3M086SBEA" | feature == "INDPRO" |feature == "IPDMAT"
|feature == "CUMFNS" | feature == "HWIURATIO" | feature == "CLF16OV"
| feature == "CE16OV" | feature == "UEMPLT5" | feature == "UEMP5TO14"
| feature == "UEMP15OV" | feature == "CLAIMSx" | feature == "PAYEMS"
| feature == "USGOOD"  | feature == "MANEMP" |feature == "TB6MS"
|feature == "GS1" |feature == "GS5" |feature == "EXUSUKx"
| feature == "lag1" ]
to_plot <- melt(koef, id.vars = "feature", variable.names = "variable", value.name = "coefficient")
colplot = c("blue3", "blue3", "blue3", "chartreuse4", "red3", "orange", "orange",
"orange", "blue3", "chartreuse4", "chartreuse4","blue3", "blue3",
"blue3", "orange", "blue3", "blue3", "blue3", "blue3")
lars = ggplot(to_plot, aes(x = feature, y = coefficient)) +
coord_flip() +
geom_bar(stat = 'identity') +
facet_wrap(~ variable, nrow = 1) +
guides(fill = FALSE) +
ylim(-0.23, 0.23) +
ylab(" ") +
xlab(" ") +
theme(plot.margin=unit(c(0,0,0.3,0),"inches")) +
theme(axis.text.y = element_text(hjust = 1, colour = colplot))
source("data_unrate.R")
source("package.R")
source("shrinkage_metoder/lars/getmin.R")
library(data.table)
set.seed(1)
#lasso
lasso_cv = cv.lars(x_train, y_train, type = "lasso", intercept = FALSE,
normalize = FALSE, trace = FALSE)
lasso_fit = lars(x_train, y_train, type = "lasso", normalize = FALSE, intercept = FALSE)
getmin_lasso = getmin_l(lasso_cv$index, lasso_cv$cv, lasso_cv$cv.error)
coef_lasso = coef(lasso_fit, s = getmin_lasso$lambda.1se, mode = "fraction")
idx_lasso = which(coef_lasso != 0)
length(idx_lasso)
## plot
coef = data.table("Lasso LARS (CV)" = coef_lasso)
coef[, feature := colnames(x_train)]
koef <- coef[feature == "IPDMAT" | feature == "HWIURATIO"
| feature == "CLF16OV"| feature == "CE16OV" | feature == "UEMPLT5"
| feature == "UEMP5TO14" | feature == "UEMP15OV" | feature == "PAYEMS"
| feature == "USGOOD"
| feature == "USCONS" |feature == "TB6MS" | feature == "GS5"
| feature == "lag1" ]
to_plot <- melt(koef, id.vars = "feature", variable.names = "variable", value.name = "coefficient")
col_plot = c("blue3", "blue3", "orange", "blue3", "chartreuse4", "blue3", "blue3",
"orange", "blue3", "blue3", "blue3", "blue3", "blue3" )
lasso = ggplot(to_plot, aes(x = feature, y = coefficient)) +
coord_flip() +
geom_bar(stat = 'identity') +
facet_wrap(~ variable, nrow = 1) +
guides(fill = FALSE) +
ylim(-0.23, 0.23) +
ylab(" ") +
xlab(" ") +
theme(plot.margin=unit(c(0,0,0.3,0),"inches")) +
theme(axis.text.y = element_text(hjust = 1, colour = col_plot))
grid.arrange(lars,lasso, nrow = 1)
data_raw = read.csv("../data/transformed_data.csv") %>% as.data.frame()
FRED_MD <- read.csv("../data/FRED_MD/current.csv", sep = ",", header = TRUE)
dato = as.Date(FRED_MD[-1, 1], format = "%m/%d/%Y")
FRED <- FRED_MD[-1, -1]
df_raw <- data.frame(dato, FRED)
FRED <- df_raw[-c(1:12, 704:708), -c(58, 60, 95, 123, 128)]
dato11 = FRED$dato
dato1 <- c(as.character(dato11))
df = data.frame(y = data_raw$UNRATE, date = as.Date(data_raw$dato))
stad = ggplot(df, aes(x = date ))  +
geom_line(aes(y = df$y), col = "dimgray") +
ylab("Rate") + xlab("") +
theme(legend.title=element_blank())
df_nu = data.frame(y = FRED$UNRATE, date = as.Date(data_raw$dato))
tail(df_nu)
uden = ggplot(df_nu, aes(x = date ))  +
geom_line(aes(y = df_nu$y), col = "dimgray") +
ylab("Procent") + xlab("") +
theme(legend.title=element_blank())
grid.arrange(uden, stad)
uden = ggplot(df_nu, aes(x = df_nu$date ))  +
geom_line(aes(y = df_nu$y), col = "dimgray") +
ylab("Procent") + xlab("") +
theme(legend.title=element_blank())
uden
grid.arrange(uden, stad)
p1 <- ggplotGrob(uden)
grid.draw(cbind(p1, p2))
p2 = ggplotGrob(stad)
grid.draw(cbind(p1, p2))
grid.draw(rbind(p1, p2))
source("data_unrate.R")
source("package.R")
source("parm.R")
source("shrinkage_metoder/res_plot.R")
source("shrinkage_metoder/lars/getmin.R")
source("shrinkage_metoder/adj.r.2.R")
set.seed(1)
lasso_fit = lars(x_train, y_train, type = "lasso", normalize = FALSE, intercept = FALSE)
lasso_fit
source("data_unrate.R")
source("shrinkage_metoder/lars/lars/krydsvalidering/insample.R")
getmin_lars$lambda.min
n_bootstrap <- 1000
n <- nrow(x_train)
bootstrap_idx <- replicate(n_bootstrap, sample(n, size = n, replace = TRUE),
simplify = FALSE)
beta_hat = coef(lars_fit, s = getmin_lars$lambda.1se)
idx_hat
lars_boot <- sapply(bootstrap_idx, function(idx) {
fit = lars(x_train[idx,], y_train[idx], type = "lar", trace = TRUE,
normalize = FALSE, intercept = FALSE)
as.vector(coef(fit, s = getmin_lars$lambda.1se, mode = "step"))
})
lars_boot_hat <- t(lars_boot[idx_hat, ]) %>%
as_tibble() %>%
setNames(names(idx_hat))
colplot = c("red3", "chartreuse4", "chartreuse4", "chartreuse4", "blue3","blue3",
"blue3", "blue3", "blue3", "blue3", "blue3", "blue3", "blue3",
"blue3", "orange", "orange", "orange", "orange","blue3")
lasso1 <- lars_boot_hat %>%
gather("Variable", "Estimate") %>%
mutate(Variable = factor(Variable, levels = names(beta_hat))) %>%
group_by(Variable) %>%
ggplot(aes(Variable, Estimate)) +
geom_boxplot(outlier.size = 0.1) +
coord_flip() +
geom_hline(yintercept = 0) +
xlab(" ") +
ylab("") +
ggtitle("Boxplot") +
theme(plot.title = element_text(size = 10)) +
theme(axis.text.y = element_text(hjust = 1, colour = colplot))
lasso1
source("shrinkage_metoder/lars/lasso/krydsvalidering/insample.R")
covtest = covTest(lasso_fit, x_train, y_train)
?covTest
#anvender 21 steps med krydsvalidering
which(coef(lasso_fit, s = getmin$lambda.1se, mode = "fraction")!=0)
#variablerne 35, 19, 79 tilføjes og fjernes igen
colnames(x_train)[78]
#variablerne 78 tilføjes, fjernes og tilføjes igen
p = (covtest$results[,3])
plot(p)
curve(df(exp, df1=2, df2=422), from=0, to=5)
covtest
#variablerne 35, 19, 79 tilføjes og fjernes igen
colnames(x_train)[35]
#variablerne 35, 19, 79 tilføjes og fjernes igen
colnames(x_train)[19]
#variablerne 35, 19, 79 tilføjes og fjernes igen
colnames(x_train)[79]
#variablerne 35, 19, 79 tilføjes og fjernes igen
colnames(x_train)[78]
lasso_cv$index
lm_1sd
covtest
source("package.R")
source("data_unrate.R")
source("shrinkage_metoder/lars/lars/bic/insample.R")
#lar fit er det samme, som ved anvendels af lars
lar_fit = lar(x_train, y_train, normalize = FALSE, intercept = FALSE)
# antallet af parameter er estimeret til at være 20
larinf = larInf(lar_fit, alpha = 0.1, type = "all", k = 20)
larinf
source("package.R")
source("data_unrate.R")
source("shrinkage_metoder/lars/lars/bic/insample.R")
#lar fit er det samme, som ved anvendels af lars
lar_fit = lar(x_train, y_train, normalize = FALSE, intercept = FALSE)
# antallet af parameter er estimeret til at være 20
larinf = larInf(lar_fit, alpha = 0.1, type = "all", k = 20)
larinf
coef = c(0.002, 0.004, 0.001, 0.003, -0.001, -0.267, 0.000, -0.004, 0.002, 0.243,
-0.006, -0.006, 0.003, 0.007, -0.006, -0.009, -0.002, 0.003, 0.001, -0.002)
coef
fit = x_train[, idx_lar] %*%coef
idx_lar = larinf$vars
idx_lar
fit = x_train[, idx_lar] %*%coef
x_train[, idx_lar]
fit = x_train[, idx_lar] %*%coef
# Residual plot -----------------------------------------------------------
res = y_train - fit
res = scale(res)
tmp = data.frame(Date = as.Date(dato_train), y = res)
qqnorm<- qqnorm.plot(res)
hist <- histogdens.plot(res)
resid <- residuals.plot(res)
acf <- residuals.acf.plot(res)
print(grid.arrange(top=textGrob('', gp=gpar(fontsize=20)), hist, qqnorm, resid, acf,
layout_matrix = matrix(c(1,2,3,4), ncol = 2, byrow = 2)))
skewness(res)
kurtosis(res)
jarque.bera.test(res)
Box.test(res, lag = 10, "Ljung-Box")
source("package.R")
source("data_unrate.R")
source("shrinkage_metoder/lars/getmin.R")
source("shrinkage_metoder/lars/lars/bic/insample.R")
library(data.table)
set.seed(1)
coef_lars = coef(lars_fit, s = lars_bic$s, mode = "step")
which(coef_lars != 0)
coef_lars = coef(lars_fit, s = lars_bic$s, mode = "step")
lars_fit
lars_bic$s
lars_bic$f_hat
coef_lars = coef(lars_fit, s = lars_bic$f_hat, mode = "fraction")
which(coef_lars != 0)
coef = data.table("LARS (BIC)" = coef_lars)
coef[, feature := colnames(x_train)]
koef <- coef[feature == "DPCERA3M086SBEA" | feature == "INDPRO" |feature == "IPDMAT"
|feature == "CUMFNS" | feature == "HWIURATIO" | feature == "CLF16OV"
| feature == "CE16OV" | feature == "UEMPLT5" | feature == "UEMP5TO14"
| feature == "UEMP15OV" | feature == "CLAIMSx" | feature == "PAYEMS"
| feature == "USGOOD"  | feature == "MANEMP" |feature == "AMDMNOx"
|  feature == "TB6MS"
|feature == "GS1" |feature == "GS5" |feature == "EXUSUKx"
| feature == "lag1" ]
to_plot <- melt(koef, id.vars = "feature", variable.names = "variable", value.name = "coefficient")
colplot = c("red3","blue3", "blue3", "blue3", "chartreuse4", "red3", "orange", "orange",
"orange", "blue3", "chartreuse4", "chartreuse4","blue3", "blue3",
"blue3", "orange", "blue3", "blue3", "blue3", "blue3")
lars = ggplot(to_plot, aes(x = feature, y = coefficient)) +
coord_flip() +
geom_bar(stat = 'identity') +
facet_wrap(~ variable, nrow = 1) +
guides(fill = FALSE) +
ylim(-0.25, 0.25) +
ylab(" ") +
xlab(" ") +
theme(plot.margin=unit(c(0,0,0.3,0),"inches"))+
theme(axis.text.y = element_text(hjust = 1, colour = colplot))
lars
source("package.R")
source("data_unrate.R")
source("shrinkage_metoder/lars/getmin.R")
source("shrinkage_metoder/lars/lasso/bic/insample.R")
coef_lasso = coef(lasso_fit, s = lasso_bic$f_hat , mode = "fraction")
which(coef_lasso != 0)
coef_lasso = data.table("LARS med lasso modifikation" = coef_lasso)
coef_lasso[, feature := colnames(x_train)]
koef_lasso <- coef_lasso[feature == "DPCERA3M086SBEA" |feature == "IPDMAT"
| feature == "CLF16OV"
| feature == "CE16OV" | feature == "UEMPLT5" | feature == "UEMP5TO14"
| feature == "UEMP15OV" | feature == "CLAIMSx" | feature == "USCONS"
| feature == "USTRADE"  |feature == "AMDMNOx"
|  feature == "TB6MS"
|feature == "GS5" |feature == "EXUSUKx" | feature == "CPIMEDSL"
| feature == "lag1" | feature == "lag4" ]
to_plot_lasso <- melt(koef_lasso, id.vars = "feature", variable.names = "variable", value.name = "coefficient")
coef_lasso = data.table("lasso LARS (BIC) " = coef_lasso)
coef_lasso[, feature := colnames(x_train)]
koef_lasso <- coef_lasso[feature == "DPCERA3M086SBEA" |feature == "IPDMAT"
| feature == "CLF16OV"
| feature == "CE16OV" | feature == "UEMPLT5" | feature == "UEMP5TO14"
| feature == "UEMP15OV" | feature == "CLAIMSx" | feature == "USCONS"
| feature == "USTRADE"  |feature == "AMDMNOx"
|  feature == "TB6MS"
|feature == "GS5" |feature == "EXUSUKx" | feature == "CPIMEDSL"
| feature == "lag1" | feature == "lag4" ]
to_plot_lasso <- melt(koef_lasso, id.vars = "feature", variable.names = "variable", value.name = "coefficient")
col_plot_lasso = c("red3", "blue3", "blue3", "blue3", "cadetblue2", "red3", "orange", "orange",
"chartreuse4", "blue3", "blue3", "orange", "blue3", "blue3", "blue3" )
lasso = ggplot(to_plot_lasso, aes(x = feature, y = coefficient)) +
coord_flip() +
geom_bar(stat = 'identity') +
facet_wrap(~ variable, nrow = 1) +
guides(fill = FALSE) +
ylim(-0.25, 0.25) +
ylab(" ") +
xlab(" ") +
theme(plot.margin=unit(c(0,0,0.3,0),"inches"))+
theme(axis.text.y = element_text(hjust = 1, colour = col_plot_lasso))
lasso
source("package.R")
source("data_unrate.R")
source("shrinkage_metoder/lars/getmin.R")
source("shrinkage_metoder/lars/lasso/bic/insample.R")
coef_lasso = coef(lasso_fit, s = lasso_bic$f_hat , mode = "fraction")
which(coef_lasso != 0)
coef_lasso = data.table("lasso LARS (BIC) " = coef_lasso)
coef_lasso[, feature := colnames(x_train)]
coef_lasso = data.table("lasso LARS (BIC)" = coef_lasso)
coef_lasso[, feature := colnames(x_train)]
koef_lasso <- coef_lasso[feature == "DPCERA3M086SBEA" |feature == "IPDMAT"
| feature == "CLF16OV"
| feature == "CE16OV" | feature == "UEMPLT5" | feature == "UEMP5TO14"
| feature == "UEMP15OV" | feature == "CLAIMSx" | feature == "USCONS"
| feature == "USTRADE"  |feature == "AMDMNOx"
|  feature == "TB6MS"
|feature == "GS5" |feature == "EXUSUKx" | feature == "CPIMEDSL"
| feature == "lag1" | feature == "lag4" ]
to_plot_lasso <- melt(koef_lasso, id.vars = "feature", variable.names = "variable", value.name = "coefficient")
source("package.R")
source("data_unrate.R")
source("shrinkage_metoder/lars/getmin.R")
source("shrinkage_metoder/lars/lasso/bic/insample.R")
lasso_bic$f_hat
source("package.R")
source("data_unrate.R")
source("shrinkage_metoder/lars/getmin.R")
source("shrinkage_metoder/lars/lasso/bic/insample.R")
coef_lasso = coef(lasso_fit, s = lasso_bic$f_hat , mode = "fraction")
lasso_bic$f_hat
coef_lasso = coef(lasso_fit, s = lasso_bic$f_hat , mode = "fraction")
coef_lasso
which(coef_lasso != 0)
coef_lasso = data.table("lasso LARS (BIC)" = coef_lasso)
coef_lasso[, feature := colnames(x_train)]
koef_lasso <- coef_lasso[feature == "DPCERA3M086SBEA" |feature == "IPDMAT"
| feature == "CLF16OV"
| feature == "CE16OV" | feature == "UEMPLT5" | feature == "UEMP5TO14"
| feature == "UEMP15OV" | feature == "CLAIMSx" | feature == "USCONS"
| feature == "USTRADE"  |feature == "AMDMNOx"
|  feature == "TB6MS"
|feature == "GS5" |feature == "EXUSUKx" | feature == "CPIMEDSL"
| feature == "lag1" | feature == "lag4" ]
to_plot_lasso <- melt(koef_lasso, id.vars = "feature", variable.names = "variable", value.name = "coefficient")
col_plot_lasso = c("red3", "blue3", "blue3", "blue3", "cadetblue2", "red3", "orange", "orange",
"chartreuse4", "blue3", "blue3", "orange", "blue3", "blue3", "blue3" )
lasso = ggplot(to_plot_lasso, aes(x = feature, y = coefficient)) +
coord_flip() +
geom_bar(stat = 'identity') +
facet_wrap(~ variable, nrow = 1) +
guides(fill = FALSE) +
ylim(-0.25, 0.25) +
ylab(" ") +
xlab(" ") +
theme(plot.margin=unit(c(0,0,0.3,0),"inches"))+
theme(axis.text.y = element_text(hjust = 1, colour = col_plot_lasso))
source("shrinkage_metoder/lars/getmin.R")
source("shrinkage_metoder/lars/lars/bic/insample.R")
coef_lars = coef(lars_fit, s = lars_bic$f_hat, mode = "fraction")
which(coef_lars != 0)
coef = data.table("LARS (BIC)" = coef_lars)
coef[, feature := colnames(x_train)]
koef <- coef[feature == "DPCERA3M086SBEA" | feature == "INDPRO" |feature == "IPDMAT"
|feature == "CUMFNS" | feature == "HWIURATIO" | feature == "CLF16OV"
| feature == "CE16OV" | feature == "UEMPLT5" | feature == "UEMP5TO14"
| feature == "UEMP15OV" | feature == "CLAIMSx" | feature == "PAYEMS"
| feature == "USGOOD"  | feature == "MANEMP" |feature == "AMDMNOx"
|  feature == "TB6MS"
|feature == "GS1" |feature == "GS5" |feature == "EXUSUKx"
| feature == "lag1" ]
to_plot <- melt(koef, id.vars = "feature", variable.names = "variable", value.name = "coefficient")
colplot = c("red3","blue3", "blue3", "blue3", "chartreuse4", "red3", "orange", "orange",
"orange", "blue3", "chartreuse4", "chartreuse4","blue3", "blue3",
"blue3", "orange", "blue3", "blue3", "blue3", "blue3")
lars = ggplot(to_plot, aes(x = feature, y = coefficient)) +
coord_flip() +
geom_bar(stat = 'identity') +
facet_wrap(~ variable, nrow = 1) +
guides(fill = FALSE) +
ylim(-0.25, 0.25) +
ylab(" ") +
xlab(" ") +
theme(plot.margin=unit(c(0,0,0.3,0),"inches"))+
theme(axis.text.y = element_text(hjust = 1, colour = colplot))
grid.arrange(lars, lasso)
grid.arrange(lars, lasso, ncol = 2)
length(col_plot_lasso)
col_plot_lasso = c("red3", "blue3", "blue3", "blue3", "cadetblue2", "red3", "orange", "orange",
"chartreuse4", "blue3", "blue3", "orange", "blue3", "blue3", "blue3", "blue3", "blue3" )
lasso = ggplot(to_plot_lasso, aes(x = feature, y = coefficient)) +
coord_flip() +
geom_bar(stat = 'identity') +
facet_wrap(~ variable, nrow = 1) +
guides(fill = FALSE) +
ylim(-0.25, 0.25) +
ylab(" ") +
xlab(" ") +
theme(plot.margin=unit(c(0,0,0.3,0),"inches"))+
theme(axis.text.y = element_text(hjust = 1, colour = col_plot_lasso))
grid.arrange(lars, lasso, ncol = 2)
source("data_unrate.R")
source("package.R")
source("parm.R")
source("shrinkage_metoder/res_plot.R")
source("shrinkage_metoder/coordinate/bic.R")
fit_lasso = glmnet(x_train, y_train, family = "gaussian", alpha = 1,
intercept = FALSE, standardize=FALSE)
fit_bic_lasso = lassoBIC(y_train, x_train, fit_lasso)
beta_hat = as.vector(coef(fit_lasso, s = fit_bic_lasso$lambda)) %>% .[-1]
coef_bic= coef(fit_lasso, s = fit_bic_lasso$lambda)
idx_bic = which(coef_bic != 0)
lm = lm(y_train ~ 0 + x_train[,idx_bic -1 ])
summary(lm)
logLik(lm)
